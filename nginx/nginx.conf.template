user nginx;
worker_processes auto;
error_log  /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;
worker_rlimit_nofile 1024;

events {
	worker_connections 1024;
	multi_accept on;
	use epoll;
}

http {

	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	
	access_log off;

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	
    client_body_buffer_size 10K;
	client_header_buffer_size 1k;
	client_max_body_size 8m;
	large_client_header_buffers 2 1k;
	keepalive_timeout 90;
    send_timeout 120;
	reset_timedout_connection on;
	types_hash_max_size 2048;
	client_body_timeout 32;
	client_header_timeout 32;

	open_file_cache max=200000 inactive=20s;
	open_file_cache_valid 30s;
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

	include /etc/nginx/blockips.conf;

    server {
        listen 443 ssl http2 reuseport fastopen=256;
        # listen [::]:443 ssl http2 reuseport fastopen=256;

        server_name  ${DOMAIN};
        
        ssl_certificate ${V2RAY_CERT_PATH};
        ssl_certificate_key ${V2RAY_KEY_PATH};
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers off;
        add_header Strict-Transport-Security "max-age=63072000" always;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
        resolver ${DNS_SERVER};

        add_header Allow "GET" always;
        add_header Content-Security-Policy "default-src https: data: 'unsafe-inline' 'unsafe-eval'" always;
        add_header X-Robots-Tag "noindex, nofollow" always;	
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Xss-Protection "1; mode=block" always;
        if ( $request_method !~ ^(GET)$ ) {
            return 444;
        }

        location / {
            proxy_pass ${REDIRECT_URL};
            limit_rate 1000k;
            proxy_redirect off;
        }

        location /${V2RAY_PATH} {
            proxy_redirect off;
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_pass http://${V2RAY_HOST}:${V2RAY_PORT};
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
